Good distinction ‚ö° ‚Äî running this cell:

! /home/work/dcvc/miniconda3/bin/conda install -y -c conda-forge gcc_linux-64 gxx_linux-64 python-distutils-lite

does not "bring conda into PATH" for your notebook.

What it does is:

Uses the absolute path to the conda executable (/home/work/dcvc/miniconda3/bin/conda).

That binary then installs packages (gcc_linux-64, gxx_linux-64, python-distutils-lite) into your current environment (dcvc_rt_env_1).

So you don‚Äôt need conda on PATH at all ‚Äî you just call it directly by path.


After running it once, you don‚Äôt have to ‚Äúbring conda‚Äù into the notebook: you can always use /home/work/dcvc/miniconda3/bin/conda when you need it.


---

üëâ So to answer directly:
No, this won‚Äôt add conda to your PATH, but it will let you use conda from your notebook by calling it via full path. If you do want conda permanently in PATH inside your notebook, you could prepend it:

import os
os.environ["PATH"] = "/home/work/dcvc/miniconda3/bin:" + os.environ["PATH"]

Then !conda --version will work just like in a normal shell.


---

Would you like me to give you a combined notebook cell that (1) fixes PATH so conda is available, and (2) installs the missing compiler/distutils packages?

