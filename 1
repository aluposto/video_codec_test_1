Got it âœ… â€” if youâ€™re running inside a Jupyter notebook, you just need to manually add the repo root (/home/work/dcvc/dcvc_try_p) to sys.path before importing. That way import src.layers.cuda_inference works.

Put this in the first cell of your notebook:

import sys
from pathlib import Path

# point this to your repo root (the one that has src/ and test_video.py)
repo_root = Path("/home/work/dcvc/dcvc_try_p").resolve()

if str(repo_root) not in sys.path:
    sys.path.insert(0, str(repo_root))

print("Repo root added to sys.path:", repo_root)

# Quick test
import importlib
print("src spec:", importlib.util.find_spec("src"))
print("src.layers spec:", importlib.util.find_spec("src.layers"))

Then you can import normally in later cells:

from src.layers.cuda_inference import replicate_pad
from src.models.video_model import DMC

Or, if you want to call the same script (test_video.py) with arguments inside the notebook, do this:

import runpy
import sys

# Simulate command line args
sys.argv = [
    "test_video.py",
    "--model_path_i", "./checkpoints/cvpr2025_image.pth.tar",
    "--model_path_p", "./checkpoints/cvpr2025_video.pth.tar",
    "--rate_num", "4",
    "--test_config", "./dataset_config_example_yuv420.json",
    "--cuda", "1",
    "-w", "1",
    "--write_stream", "1",
    "--force_zero_thres", "0.12",
    "--output_path", "output.json",
    "--force_intra_period", "-1",
    "--reset_interval", "64",
    "--force_frame_num", "-1",
    "--check_existing", "0",
    "--verbose", "0",
]

runpy.run_path("test_video.py")


---

ðŸ‘‰ Question: Do you want to call functions directly inside Jupyter (import classes and run them), or do you prefer to run the script test_video.py unchanged inside the notebook?

