# Cell 1: build the py_rans / MLCodec_extensions_cpp extension
import subprocess, sys, os
from pathlib import Path

repo_root = Path("/home/work/dcvc/dcvc_try_p").resolve()
py_rans_dir = repo_root / "src" / "cpp" / "py_rans"

print("py_rans dir:", py_rans_dir)
if not py_rans_dir.exists():
    raise FileNotFoundError(f"{py_rans_dir} not found. Adjust repo_root if needed.")

# Ensure some build tools are available: try to call python setup.py build_ext --inplace
cmd = [sys.executable, "setup.py", "build_ext", "--inplace"]
print("Running:", " ".join(cmd), "in", str(py_rans_dir))
proc = subprocess.run(cmd, cwd=str(py_rans_dir), capture_output=True, text=True)

print("returncode:", proc.returncode)
print("----- stdout -----")
print(proc.stdout[:4000])
print("----- stderr -----")
print(proc.stderr[:8000])

if proc.returncode != 0:
    print("\nBuild failed. Common causes: missing C/C++ compiler, missing python dev headers, or incompatible Python version.")
    print("If build failed, paste the stderr here and I'll help debug.")
else:
    print("\npy_rans built. Check for a generated .so file in the directory. You should now be able to 'import MLCodec_extensions_cpp' from Python.")







py_rans dir: /home/work/dcvc/dcvc_try_p/src/cpp/py_rans
Running: /home/work/dcvc/miniconda3/envs/dcvc_rt_env_1/bin/python setup.py build_ext --inplace in /home/work/dcvc/dcvc_try_p/src/cpp/py_rans
returncode: 2
----- stdout -----

----- stderr -----
/home/work/dcvc/miniconda3/envs/dcvc_rt_env_1/bin/python: can't open file '/home/work/dcvc/dcvc_try_p/src/cpp/py_rans/setup.py': [Errno 2] No such file or directory


Build failed. Common causes: missing C/C++ compiler, missing python dev headers, or incompatible Python version.
If build failed, paste the stderr here and I'll help debug.
