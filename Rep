# Run training and, if it fails, print traceback + show DMC class lines for quick patching
import subprocess, sys, textwrap, os

train_cmd = r'''python training.py \
  --train-glob "data/frames/train/**/*.png" \
  --val-glob "data/frames/val/**/*.png" \
  --patch-size 256 --temporal-len 4 --batch-size 6 \
  --epochs 30 --cuda --amp \
  --pretrained "./checkpoints/cvpr2025_video.pth.tar" \
  --lambda-rd 0.01 \
  --save-dir "./checkpoints_finetune_lambda0.01" \
  --log-dir "./logs/dcvc_finetune_lambda0.01" \
  --workers 4
'''

print("Running training command...\n")
proc = subprocess.Popen(train_cmd, shell=True, stdout=subprocess.PIPE, stderr=subprocess.STDOUT, universal_newlines=True, bufsize=1)

# Stream output; capture last 200 lines for debugging
last_lines = []
try:
    for line in proc.stdout:
        print(line, end="")
        last_lines.append(line)
        if len(last_lines) > 400:
            last_lines.pop(0)
except KeyboardInterrupt:
    proc.kill()
    print("\nTraining run interrupted by user.")
    raise

ret = proc.wait()
print("\nProcess exited with code", ret)

if ret != 0:
    print("\n--- Training failed. Showing recent output (last 200 lines) ---\n")
    print("".join(last_lines[-200:]))
    print("\n--- Now printing DMC class excerpt (src/models/video_model.py lines ~200-320) ---\n")
    os.system("sed -n '200,320p' src/models/video_model.py")
    print("\nPaste the traceback or the DMC excerpt here and I will provide the exact patch to construct the model correctly.")
else:
    print("Training finished (exit code 0).")
