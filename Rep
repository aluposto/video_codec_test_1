# Patch training.py so it imports DMC from src.models.video_model as VideoModel
from pathlib import Path
import re, sys

p = Path("training.py")
if not p.exists():
    print("ERROR: training.py not found in current directory:", Path.cwd())
    raise SystemExit(1)

txt = p.read_text()

# Build the replacement block we want
replacement = (
    "try:\n"
    "    from src.models.video_model import DMC as VideoModel\n"
    "except Exception:\n"
    "    VideoModel = None\n"
)

# 1) If the exact line already exists, report and show context
if "from src.models.video_model import DMC as VideoModel" in txt:
    print("training.py already contains the correct import. Showing top of file:\n")
    print("\n".join(txt.splitlines()[:60]))
else:
    # 2) Remove any existing 'from src.models.* import ... as VideoModel' block (naive but safe)
    #    and insert our correct replacement near the top (after any initial docstring if present).
    # remove lines that import VideoModel from src.models.*
    txt2 = re.sub(r"try:\s*from\s+src\.models\.[^\n]+\s+import\s+[^\n]+\s+as\s+VideoModel\s*except\s+Exception:\s+VideoModel\s*=\s*None",
                  "",
                  txt, flags=re.MULTILINE)
    txt2 = re.sub(r"from\s+src\.models\.[^\n]+\s+import\s+[^\n]+\s+as\s+VideoModel", "", txt2, flags=re.MULTILINE)

    # Find insertion point: after initial docstring (if any), otherwise at top
    insert_at = 0
    if txt2.startswith('"""') or txt2.startswith("'''"):
        # find closing docstring
        delim = '"""' if txt2.startswith('"""') else "'''"
        end = txt2.find(delim, len(delim))
        if end != -1:
            insert_at = end + len(delim)

    # Insert replacement
    txt3 = txt2[:insert_at] + "\n" + replacement + "\n" + txt2[insert_at:]

    # Write back
    p.write_text(txt3)
    print("Patched training.py to import DMC as VideoModel. Showing top of file:\n")
    print("\n".join(txt3.splitlines()[:80]))
