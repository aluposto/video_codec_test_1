export OUTJSON=./out_results.json   # set this or replace $OUTJSON in the command below
PYTHONPATH=$PWD/src:$PYTHONPATH \
DCVC_FORCE_PY_FALLBACK=1 \
CUDA_VISIBLE_DEVICES="" \
python test_video.py \
  --model_path_i ./checkpoints/cvpr2023_image_ssim.pth.tar \
  --model_path_p ./checkpoints/cvpr2023_video_ssim.pth.tar \
  --rate_num 2 \
  --test_config ./DCVC-DC/dataset_config_example_yuv420.json \
  --cuda 0 \
  -w 1 \
  --write_stream 1 \
  --save_decoded_frame 1 \
  --force_zero_thres 0.12 \
  --output_path "$OUTJSON" \
  --force_intra_period -1 \
  --reset_interval 64 \
  --force_frame_num -1 \
  --check_existing 0 \
  --verbose 13. Optionally add a small shim/stub module with the compiled module name that routes calls to Python functions (if code imports symbols with from module import name and you want minimal edits).



Step 1 â€” locate imports (run this and paste output or inspect) From repo root run:

# find direct imports of suspected compiled modules
grep -RIn "MLCodec_extensions_cpp" -n src || true
grep -RIn "extensions_cpp" -n src || true
# also search for likely compiled extension

