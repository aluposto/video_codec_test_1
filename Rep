Perfect ðŸ‘Œ â€” since youâ€™ve placed the file at

/home/work/dcvc/DCVC_fresh/media/data/UVG/Beauty_1920x1080_120fps_420_8bit_YUV.yuv

but your dataset_config_example_yuv420.json still points to

/media/data/UVG/Beauty_1920x1080_120fps_420_8bit_YUV.yuv

you just need to patch the JSON so it uses the correct relative path inside your repo.


---

âœ… Fix dataset config

Run this in your notebook (repo root):

import json, pathlib

config_path = pathlib.Path("dataset_config_example_yuv420.json")
cfg = json.loads(config_path.read_text())

for seq in cfg:
    if "UVG" in seq["src_path"]:
        old = seq["src_path"]
        seq["src_path"] = "./media/data/UVG/Beauty_1920x1080_120fps_420_8bit_YUV.yuv"
        print("Patched:", old, "->", seq["src_path"])

config_path.write_text(json.dumps(cfg, indent=2))
print("Updated JSON:", config_path)


---

âœ… Test with a few frames first

Instead of processing the whole 120fps clip, run a quick test:

python test_video.py \
  --model_path_i ./checkpoints/cvpr2025_image.pth.tar \
  --model_path_p ./checkpoints/cvpr2025_video.pth.tar \
  --rate_num 1 \
  --test_config ./dataset_config_example_yuv420.json \
  --cuda 0 \
  -w 1 \
  --write_stream 0 \
  --save_decoded_frame 0 \
  --force_zero_thres 0.12 \
  --output_path output.json \
  --force_intra_period -1 \
  --reset_interval 64 \
  --force_frame_num 2 \
  --check_existing 0 \
  --verbose 1

That will process only 2 frames using CPU only â†’ quick sanity check.


---

âœ… Then run the full job

If the small run works, remove --force_frame_num 2 and set --cuda 1 if you want GPU.


---

Do you want me to also show you how to limit the resolution or crop the YUV so tests run faster, instead of full 1080p?

