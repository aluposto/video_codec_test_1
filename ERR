# Cell 3: run test_video.py with PYTHONPATH set for the subprocess
import os, sys, subprocess
from pathlib import Path

repo_root = Path("/home/work/dcvc/DCVC_fresh").resolve()
os.chdir(repo_root)

env = os.environ.copy()
env["PYTHONPATH"] = str(repo_root)   # ensures worker subprocesses can import src.*

cmd = [
    sys.executable, "test_video.py",
    "--model_path_i", "./checkpoints/cvpr2025_image.pth.tar",
    "--model_path_p", "./checkpoints/cvpr2025_video.pth.tar",
    "--rate_num", "4",
    "--test_config", "./dataset_config_example_yuv420.json",
    "--cuda", "1",         # change to "0" if you don't have usable GPU
    "-w", "1",
    "--write_stream", "1",
    "--save_decoded_frame", "1",
    "--force_zero_thres", "0.12",
    "--output_path", "output.json",
    "--force_intra_period", "-1",
    "--reset_interval", "64",
    "--force_frame_num", "-1",
    "--check_existing", "0",
    "--verbose", "1",
]

print("Running:", " ".join(cmd))
proc = subprocess.run(cmd, cwd=str(repo_root), env=env)
print("Return code:", proc.returncode)

Running: /home/work/dcvc/miniconda3/envs/dcvc_rt_env/bin/python test_video.py --model_path_i ./checkpoints/cvpr2025_image.pth.tar --model_path_p ./checkpoints/cvpr2025_video.pth.tar --rate_num 4 --test_config ./dataset_config_example_yuv420.json --cuda 1 -w 1 --write_stream 1 --save_decoded_frame 1 --force_zero_thres 0.12 --output_path output.json --force_intra_period -1 --reset_interval 64 --force_frame_num -1 --check_existing 0 --verbose 1
cannot import cuda implementation for inference, fallback to pytorch.
testing 4 rates, using qp: 0, 21, 42, 63, 
  0%|          | 0/212 [00:00<?, ?it/s]
cannot import cuda implementation for inference, fallback to pytorch.
  0%|          | 0/212 [00:12<?, ?it/s]
concurrent.futures.process._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "/home/work/dcvc/miniconda3/envs/dcvc_rt_env/lib/python3.12/concurrent/futures/process.py", line 264, in _process_worker
    r = call_item.fn(*call_item.args, **call_item.kwargs)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/work/dcvc/DCVC_fresh/test_video.py", line 370, in worker
    result = run_one_point_with_stream(p_frame_net, i_frame_net, args)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/work/dcvc/DCVC_fresh/test_video.py", line 192, in run_one_point_with_stream
    encoded = i_frame_net.compress(x_padded, args['qp_i'])
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/work/dcvc/DCVC_fresh/src/models/image_model.py", line 178, in compress
    bit_stream = self.entropy_coder.get_encoded_stream()
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/work/dcvc/DCVC_fresh/src/models/entropy_models.py", line 58, in get_encoded_stream
    return self.encoder.get_encoded_stream().tobytes()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'bytes' object has no attribute 'tobytes'
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/work/dcvc/DCVC_fresh/test_video.py", line 541, in <module>
    main()
  File "/home/work/dcvc/DCVC_fresh/test_video.py", line 514, in main
    result = obj.result()
             ^^^^^^^^^^^^
  File "/home/work/dcvc/miniconda3/envs/dcvc_rt_env/lib/python3.12/concurrent/futures/_base.py", line 456, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/home/work/dcvc/miniconda3/envs/dcvc_rt_env/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
AttributeError: 'bytes' object has no attribute 'tobytes'
Return code: 1
